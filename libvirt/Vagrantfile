# Define common variables
UBUNTU_BOX = "generic/ubuntu2204"
UBUNTU_BOX_VERSION = "4.3.12"
WINDOWS_BOX = "peru/windows-server-2019-standard-x64-eval"
WINDOWS_BOX_VERSION = "20240201.01"
MEMORY_SERVER1 = 10240 # 10GB RAM
MEMORY_SERVER2 = 4240 # 4GB RAM
MEMORY_SERVER3 = 6144  # 6GB RAM
MEMORY_SERVER4 = 20240
CPUS = 2

Vagrant.configure("2") do |config|
  # Define Server 1 (Ubuntu 22.04, 10GB RAM, 2 CPU cores)
  config.vm.define "server1" do |server1|
    server1.vm.box = UBUNTU_BOX
    server1.vm.box_version = UBUNTU_BOX_VERSION
    server1.vm.hostname = "server1"
    server1.vm.network "private_network", ip: "192.168.56.101"
    server1.vm.synced_folder "/home/ben/data/server1", "/vagrant_data"
    server1.vm.provider "libvirt" do |lv|
      lv.memory = MEMORY_SERVER1
      lv.cpus = CPUS
    end
    server1.vm.provision "shell", inline: <<-SHELL
      set -e # Exit immediately if a command exits with a non-zero status
      sudo apt update
    SHELL
  end

  # Define Server 2 (Ubuntu 22.04, 4GB RAM, 2 CPU cores)
  config.vm.define "server2" do |server2|
    server2.vm.box = UBUNTU_BOX
    server2.vm.box_version = UBUNTU_BOX_VERSION
    server2.vm.hostname = "server2"
    server2.vm.network "private_network", ip: "192.168.56.102"
    server2.vm.synced_folder "/home/ben/data/server2", "/vagrant_data"
    server2.vm.provider "libvirt" do |lv|
      lv.memory = MEMORY_SERVER2
      lv.cpus = CPUS
    end
    server2.vm.provision "shell", inline: <<-SHELL
      set -e # Exit immediately if a command exits with a non-zero status
      sudo apt update && sudo apt install -y mysql-server
      sudo systemctl enable mysql && sudo systemctl start mysql
      sudo mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH 'mysql_native_password' BY 'SecurePass123!';"
      sudo mysql -e "CREATE DATABASE app_db;"
    SHELL
  end

  # Define Server 3 (Windows Server 2019, 6GB RAM, 2 CPU cores) - TLS ONLY
  config.vm.define "server3" do |server3|
    server3.vm.box = WINDOWS_BOX
    server3.vm.box_version = WINDOWS_BOX_VERSION
    server3.vm.hostname = "server3"
    server3.vm.network "private_network", ip: "192.168.56.103"
    
    server3.vm.provider "libvirt" do |lv|
      lv.memory = MEMORY_SERVER3
      lv.cpus = CPUS
    end

    server3.vm.provision "shell", inline: <<-SHELL
      # Generate a self-signed certificate
      $cert = New-SelfSignedCertificate -DnsName "192.168.56.103" -CertStoreLocation "Cert:\\LocalMachine\\My"
      
      # Export the certificate for use
      $pwd = ConvertTo-SecureString -String "VagrantTLS2025!" -Force -AsPlainText
      $certPath = "C:\\vagrant_data\\server3.pfx"
      Export-PfxCertificate -Cert "Cert:\\LocalMachine\\My\\$($cert.Thumbprint)" -FilePath $certPath -Password $pwd

      # Import PFX certificate to Trusted Root Certification Authorities
      Import-PfxCertificate -FilePath $certPath -CertStoreLocation "Cert:\\LocalMachine\\Root" -Password $pwd

      Write-Host "âœ… TLS certificate installed successfully!"
    SHELL
  end

  # Define Server 4 (Ubuntu 22.04, 10GB RAM, 2 CPU cores, same as Server 1)
  config.vm.define "server4" do |server4|
    server4.vm.box = UBUNTU_BOX
    server4.vm.box_version = UBUNTU_BOX_VERSION
    server4.vm.hostname = "server4"
    server4.vm.network "private_network", ip: "192.168.56.104"
    server4.vm.synced_folder "/home/ben/data/server4", "/vagrant_data"
    server4.vm.provider "libvirt" do |lv|
      lv.memory = MEMORY_SERVER4
      lv.cpus = CPUS
    end
    server4.vm.provision "shell", inline: <<-SHELL
      set -e # Exit immediately if a command exits with a non-zero status
      sudo apt update
    SHELL
  end
end
